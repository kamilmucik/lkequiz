// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: pkg/quiz/pb/quiz.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FindPagged
type FindQuizAnswerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Answer       string `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	Correct      string `protobuf:"bytes,3,opt,name=correct,proto3" json:"correct,omitempty"`
	DepartmentId int64  `protobuf:"varint,4,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
}

func (x *FindQuizAnswerData) Reset() {
	*x = FindQuizAnswerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_quiz_pb_quiz_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindQuizAnswerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindQuizAnswerData) ProtoMessage() {}

func (x *FindQuizAnswerData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_quiz_pb_quiz_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindQuizAnswerData.ProtoReflect.Descriptor instead.
func (*FindQuizAnswerData) Descriptor() ([]byte, []int) {
	return file_pkg_quiz_pb_quiz_proto_rawDescGZIP(), []int{0}
}

func (x *FindQuizAnswerData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindQuizAnswerData) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *FindQuizAnswerData) GetCorrect() string {
	if x != nil {
		return x.Correct
	}
	return ""
}

func (x *FindQuizAnswerData) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

type FindPaggedQuizData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code       string                `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Question   string                `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`
	QuestionId int64                 `protobuf:"varint,4,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	Answers    []*FindQuizAnswerData `protobuf:"bytes,5,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *FindPaggedQuizData) Reset() {
	*x = FindPaggedQuizData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_quiz_pb_quiz_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPaggedQuizData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPaggedQuizData) ProtoMessage() {}

func (x *FindPaggedQuizData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_quiz_pb_quiz_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPaggedQuizData.ProtoReflect.Descriptor instead.
func (*FindPaggedQuizData) Descriptor() ([]byte, []int) {
	return file_pkg_quiz_pb_quiz_proto_rawDescGZIP(), []int{1}
}

func (x *FindPaggedQuizData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindPaggedQuizData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *FindPaggedQuizData) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *FindPaggedQuizData) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *FindPaggedQuizData) GetAnswers() []*FindQuizAnswerData {
	if x != nil {
		return x.Answers
	}
	return nil
}

type FindPaggedQuizRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId  int64 `protobuf:"varint,1,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	CurrentPage int64 `protobuf:"varint,2,opt,name=currentPage,proto3" json:"currentPage,omitempty"`
	PageSize    int64 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *FindPaggedQuizRequest) Reset() {
	*x = FindPaggedQuizRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_quiz_pb_quiz_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPaggedQuizRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPaggedQuizRequest) ProtoMessage() {}

func (x *FindPaggedQuizRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_quiz_pb_quiz_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPaggedQuizRequest.ProtoReflect.Descriptor instead.
func (*FindPaggedQuizRequest) Descriptor() ([]byte, []int) {
	return file_pkg_quiz_pb_quiz_proto_rawDescGZIP(), []int{2}
}

func (x *FindPaggedQuizRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *FindPaggedQuizRequest) GetCurrentPage() int64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *FindPaggedQuizRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type FindPaggedQuizResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    int64                 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error     string                `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	TotalPage int64                 `protobuf:"varint,3,opt,name=totalPage,proto3" json:"totalPage,omitempty"`
	Data      []*FindPaggedQuizData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *FindPaggedQuizResponse) Reset() {
	*x = FindPaggedQuizResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_quiz_pb_quiz_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPaggedQuizResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPaggedQuizResponse) ProtoMessage() {}

func (x *FindPaggedQuizResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_quiz_pb_quiz_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPaggedQuizResponse.ProtoReflect.Descriptor instead.
func (*FindPaggedQuizResponse) Descriptor() ([]byte, []int) {
	return file_pkg_quiz_pb_quiz_proto_rawDescGZIP(), []int{3}
}

func (x *FindPaggedQuizResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FindPaggedQuizResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *FindPaggedQuizResponse) GetTotalPage() int64 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *FindPaggedQuizResponse) GetData() []*FindPaggedQuizData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_pkg_quiz_pb_quiz_proto protoreflect.FileDescriptor

var file_pkg_quiz_pb_quiz_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x6b, 0x67, 0x2f, 0x71, 0x75, 0x69, 0x7a, 0x2f, 0x70, 0x62, 0x2f, 0x71, 0x75,
	0x69, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x71, 0x75, 0x69, 0x7a, 0x22, 0x7b,
	0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x51, 0x75, 0x69, 0x7a, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x12,
	0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x67, 0x65, 0x64, 0x51, 0x75, 0x69, 0x7a, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x51, 0x75, 0x69, 0x7a, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0x75, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x50,
	0x61, 0x67, 0x67, 0x65, 0x64, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x92,
	0x01, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x67, 0x65, 0x64, 0x51, 0x75, 0x69,
	0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50,
	0x61, 0x67, 0x67, 0x65, 0x64, 0x51, 0x75, 0x69, 0x7a, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x32, 0x5c, 0x0a, 0x0b, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x67, 0x65, 0x64,
	0x51, 0x75, 0x69, 0x7a, 0x12, 0x1b, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x50, 0x61, 0x67, 0x67, 0x65, 0x64, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x67,
	0x67, 0x65, 0x64, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x71, 0x75, 0x69, 0x7a, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_quiz_pb_quiz_proto_rawDescOnce sync.Once
	file_pkg_quiz_pb_quiz_proto_rawDescData = file_pkg_quiz_pb_quiz_proto_rawDesc
)

func file_pkg_quiz_pb_quiz_proto_rawDescGZIP() []byte {
	file_pkg_quiz_pb_quiz_proto_rawDescOnce.Do(func() {
		file_pkg_quiz_pb_quiz_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_quiz_pb_quiz_proto_rawDescData)
	})
	return file_pkg_quiz_pb_quiz_proto_rawDescData
}

var file_pkg_quiz_pb_quiz_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pkg_quiz_pb_quiz_proto_goTypes = []interface{}{
	(*FindQuizAnswerData)(nil),     // 0: quiz.FindQuizAnswerData
	(*FindPaggedQuizData)(nil),     // 1: quiz.FindPaggedQuizData
	(*FindPaggedQuizRequest)(nil),  // 2: quiz.FindPaggedQuizRequest
	(*FindPaggedQuizResponse)(nil), // 3: quiz.FindPaggedQuizResponse
}
var file_pkg_quiz_pb_quiz_proto_depIdxs = []int32{
	0, // 0: quiz.FindPaggedQuizData.answers:type_name -> quiz.FindQuizAnswerData
	1, // 1: quiz.FindPaggedQuizResponse.data:type_name -> quiz.FindPaggedQuizData
	2, // 2: quiz.QuizService.FindPaggedQuiz:input_type -> quiz.FindPaggedQuizRequest
	3, // 3: quiz.QuizService.FindPaggedQuiz:output_type -> quiz.FindPaggedQuizResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_quiz_pb_quiz_proto_init() }
func file_pkg_quiz_pb_quiz_proto_init() {
	if File_pkg_quiz_pb_quiz_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_quiz_pb_quiz_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindQuizAnswerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_quiz_pb_quiz_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPaggedQuizData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_quiz_pb_quiz_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPaggedQuizRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_quiz_pb_quiz_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPaggedQuizResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_quiz_pb_quiz_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_quiz_pb_quiz_proto_goTypes,
		DependencyIndexes: file_pkg_quiz_pb_quiz_proto_depIdxs,
		MessageInfos:      file_pkg_quiz_pb_quiz_proto_msgTypes,
	}.Build()
	File_pkg_quiz_pb_quiz_proto = out.File
	file_pkg_quiz_pb_quiz_proto_rawDesc = nil
	file_pkg_quiz_pb_quiz_proto_goTypes = nil
	file_pkg_quiz_pb_quiz_proto_depIdxs = nil
}
